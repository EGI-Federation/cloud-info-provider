---
name: Prepare new release as PR

on:
  repository_dispatch:
    types: [release]

permissions:
  pull-requests: write
  contents: write

jobs:
  prepare-release:
    name: Prepare Release
    runs-on: ubuntu-latest
    container: ubuntu:latest
    steps:
      - name: install packages
        run: |
          apt-get update && apt-get install -y jq curl git
          # Need a new pandoc for markdown rendering below
          curl -L https://github.com/jgm/pandoc/releases/download/2.11.1.1/pandoc-2.11.1.1-1-amd64.deb \
            > pandoc-2.11.1.1-1-amd64.deb
          apt-get install -y ./pandoc-2.11.1.1-1-amd64.deb
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - uses: actions/checkout@v3
      - name: get git ready
        run: |
          git config user.name "egibot"
          git config user.email "egibot@egi.eu"
      - name: Extract version
        id: extract-version
        run: |
          version=$(grep "^## \[[0-9].*\]" CHANGELOG | \
                    head -1 | sed -e "s/^.*\[\(.*\)\].*/\1/")
          echo "version=$version" >> "$GITHUB_OUTPUT"
      - name: Extract changelog
        id: extract-changelog
        uses: sean0x42/markdown-extract@v2
        with:
          file: CHANGELOG
          pattern: ${{ steps.extract-version.outputs.version }}
          no-print-matched-heading: true
      - name: bump versions
        run: |
          # rpms
          {
             echo -n "* $(date '+%a %b %d %Y') "
             echo -n "$(git config user.name) <$(git config user.email)> "
             echo '${{ steps.extract-version.outputs.version }}'
             echo '${{ steps.extract-changelog.outputs.markdown}}'
          } > rpm-changes
      
          for spec in rpm/*.spec; do
              sed -i -e "s/^\(Version.\).*/\\1 ${{ steps.extract-version.outputs.version }}/" "$spec"
              sed -i -e "/%changelog/r rpm-changes" "$spec"
          done
      
          rm -f rpm-changes
      
          # debs
          for deb in debian/ debs/cloud-info-provider-opennebula/debian/ \
                     debs/cloud-info-provider-openstack/debian/ ; do
              pkg=$(head -1 "$deb/changelog" | cut -f1 -d" ")
              {
                  echo "$pkg (${{ steps.extract-version.outputs.version }}-1) \
                        xenial; urgency=medium"
                  echo ""
                  echo '${{ steps.extract-changelog.outputs.markdown}}' | \
                      sed -e "s/^-/*/" | sed -e "s/^/  /" | sed '/^[[:space:]]*$/d'
                  echo ""
                  echo " -- $(git config user.name) <$(git config user.email)> $(date -R)"
                  echo ""
              } > debian-changes
              cat debian-changes "$deb/changelog" > "$deb/changelog.new"
              mv "$deb/changelog.new" "$deb/changelog"
          done
      
          rm -f debian-changes
      
          # Zenodo
          zenodo_changes=$(echo '${{ steps.extract-changelog.outputs.markdown}}' \
                           | pandoc --from gfm --to html | tr -s "\n" " ")
      
          jq --arg VERSION "${{ steps.extract-version.outputs.version }}" \
             --arg TITLE "EGI-Federation/cloud-info-provider: ${{ steps.extract-version.outputs.version }}" \
             --arg RELATED "https://github.com/EGI-Federation/cloud-info-provider/tree/${{ steps.extract-version.outputs.version }}" \
             --arg DATE "$(date '+%Y-%m-%d')" \
             --arg DESC "$zenodo_changes" \
             '.version = $VERSION |
              .title = $TITLE | 
              .related_identifiers[0].identifier = $RELATED |
              .publication_date = $DATE | 
              .description = $DESC' < .zenodo.json > .zenodo.json.new
          mv .zenodo.json.new .zenodo.json
      
          git commit -a -m "Prepare version ${{ steps.extract-version.outputs.version }}"
      - name: Create Pull Request for version
        uses: peter-evans/create-pull-request@v5
        with:
          delete-branch: true
          body: >
            Prepares release ${{ steps.extract-version.outputs.version }}
      
            Update RPM and DEB package descriptions and .zenodo.json for
            version ${{  steps.extract-version.outputs.version }}
          labels: release
          branch: release-${{ steps.extract-version.outputs.version }}
          title: Release  ${{ steps.extract-version.outputs.version }}
