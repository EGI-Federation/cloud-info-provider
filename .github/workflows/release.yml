name: Create release with packages

on:
  push:
#    tags:
#    - '*'

jobs:
  sdist:
    name: build python sdist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
    - name: Build sdist
      run: |
        pip install tox
        python setup.py sdist
        ls -lR
    - name: Upload output file
      uses: actions/upload-artifact@v2
      with:
        name: sdist
        path: dist/*tar.gz

  centos7:
    name: build centos 7 rpms
    needs: sdist
    runs-on: ubuntu-latest
    container: centos:7
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: sdist
    - name: install build requisites
      run: |
        yum install -y rpm-build rpmlint
        yum install -y centos-release-openstack-queens
        yum install -y python-pbr python-setuptools
    - name: build rpm
      run: |
        mkdir -p {BUILD,RPMS,SOURCES,SPECS,SRPMS}
        VERSION="$(ls cloud_info_provider-* | sed s/cloud_info_provider-// | sed s/.tar.gz//)"
        tar -xzf cloud_info_provider-$VERSION.tar.gz --strip-components 1 cloud_info_provider-$VERSION/rpm
        ls -ltrR
        sed -i "s/^\(Version.\).*/\\1 $VERSION/" rpm/cloud-info-provider.spec
        cp -v cloud_info_provider*tar.gz SOURCES
        rpmbuild --define "_topdir $PWD" -ba rpm/cloud-info-provider.spec
        rpmbuild --define "_topdir $PWD" -ba rpm/cloud-info-provider-openstack.spec
        rpmbuild --define "_topdir $PWD" -ba rpm/cloud-info-provider-opennebula.spec
    - name: Upload rpms
      uses: actions/upload-artifact@v2
      with:
        name: rpms
        path: RPMS/noarch/*.rpm

  ubuntu:
    name: build debs
    needs: sdist
    runs-on: ubuntu-latest
    container: ubuntu:xenial
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: sdist
    - name: install build requistes
      run: |
        apt-get update -q
        apt-get install -q -y devscripts debhelper git
        apt-get install -q -y python-all-dev python-pbr python-setuptools
    - name: build packages
      run: |
        VERSION=$(ls cloud_info_provider-* | sed s/cloud_info_provider-// | sed s/.tar.gz//)
        tar -xzf cloud_info_provider-$VERSION.tar.gz
        cd cloud_info_provider-$VERSION
        debuild --no-tgz-check clean binary
        cd debs/cloud-info-provider-openstack
        debuild --no-tgz-check clean binary
        cd ../../debs/cloud-info-provider-opennebula
        debuild --no-tgz-check clean binary
    - name: Upload debs
      uses: actions/upload-artifact@v2
      with:
        name: debs
        path: "**/*.deb"

  release:
    needs: [ubuntu, centos7]
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          draft: false
#          prerelease: false
      - uses: actions/download-artifact@v2
        with:
          name: debs
      - uses: actions/download-artifact@v2
        with:
          name: rpms
      - name: Upload base rpm 
        run: |
          ls -Ra
#      - name: Upload base rpm 
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./my-artifact.zip
#          asset_name: my-artifact.zip
#          asset_content_type: application/zip
