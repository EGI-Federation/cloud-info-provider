<%
    middleware = attributes['middleware']
    goc_service_type = attributes['dynamic_provider'].goc_service_type
    static_compute_info = attributes['static_compute_info']
    shares = attributes['shares']
%>\
{
    "service": {
        "data": {
            "service_type": "${goc_service_type}",
            % if middleware == "mesos":
            "endpoint": "${static_compute_info['leader']}",
            "hostname": "${static_compute_info['leader_info']['hostname']}",
            "properties": {
            <%
                if 'master/gpus_total' in static_compute_info.keys():
                    is_master = True
                    has_gpu = static_compute_info['master/gpus_total']
                elif 'marathon_config' in static_compute_info.keys():
                    is_master = False
                    has_gpu = 'gpu_resources' in static_compute_info['marathon_config']['features']
            %>
                "gpu_support": ${'true' if has_gpu else 'false'},
                % if is_master:
                "num_gpus": ${static_compute_info['master/gpus_total']},
                "num_gpus_used": ${static_compute_info['master/gpus_used']},
                "num_cpus": ${static_compute_info['master/cpus_total']},
                "num_cpus_used": ${static_compute_info['master/cpus_used']},
                "mem_total": ${static_compute_info['master/mem_total']},
                "mem_used": ${static_compute_info['master/mem_used']}
                % else:
                "num_gpus": ${static_compute_info['compute_total_accelerators']},
                "num_cpus": ${static_compute_info['compute_total_cores']},
                "mem_total": ${static_compute_info['compute_total_ram']},
                "local_volumes_host_base_path": "${static_compute_info['compute_local_volumes_host_base_path']}",
                "persistent_storage_drivers": ${static_compute_info['compute_persistent_storage_drivers']},
                "load_balancer_ips": ${static_compute_info['compute_load_balancer_ips']}
                % endif
            },
            % else:
            <%
                from six.moves import urllib
                host_name = urllib.parse.urlparse(static_compute_info['compute_service_name']).hostname
            %>
            "endpoint": "${static_compute_info['compute_service_name']}",
            "hostname": "${host_name}",
            % endif
            "provider_id": "NA",
            "sitename": "${static_compute_info['site_name']}",
            "type": "compute"
        },
        "type": "service"
    }${',' if shares else ''}
% for _vo, _share in shares.items():
    "${_vo}": {
        "flavors": [
% for _flavor_id, _flavor in _share['templates'].items():
            {
                "type": "flavor",
                "data": {
                    "flavor_id": "${_flavor_id}",
                    "flavor_name": "${_flavor['flavor_name']}",
                    "num_vcpus": "${_flavor['template_cpu']}",
                    "ram": "${_flavor['template_memory']}",
                    "disk": "${_flavor['template_disk']}",
                    "num_gpus": ${_flavor['template_flavor_gpu_number']},
                    "gpu_vendor": "${_flavor['template_flavor_gpu_vendor']}",
                    "gpu_model": "${_flavor['template_flavor_gpu_model']}",
                    "service": "NA"
                }
            }${'' if loop.last else ','}
% endfor
        ],
        "images": [
% for _image_id, _image in _share['images'].items():
            {
                "type": "image",
                "data": {
                    "image_id": "${_image['id']}",
                    "image_name": "${_image['image_name']}",
                    "image_description": "${_image['image_description']}",
                    "image_marketplace_id": "${_image['image_marketplace_id']}",
                    "architecture": "${_image['architecture']}",
                    "type": "${_image['os_distro']}",
                    "distribution": "${_image['os_distro']}",
                    "version": "${_image['image_os_version']}",
                    "image_os": "${_image['image_os_name']}",
                    "gpu_driver": "NA",
                    "gpu_driver_version": "NA",
                    "cuda_support": "NA",
                    "cuda_version": "NA",
                    "cuDNN_version": "NA",
                    "service": "NA"
                }
            }${'' if loop.last else ','}
% endfor
        ]
    }
% endfor
}
