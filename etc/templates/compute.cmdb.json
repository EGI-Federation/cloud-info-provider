<%
    middleware = attributes['middleware']
    goc_service_type = attributes['dynamic_provider'].goc_service_type
    static_compute_info = attributes['static_compute_info']
    shares = attributes['shares']
%>\
{
    "service": {
% if middleware == "mesos":
<%
    if 'master/gpus_total' in static_compute_info.keys():
        gpu_support = static_compute_info['master/gpus_total']
        is_master = True
    elif 'marathon_config' in static_compute_info.keys():
        gpu_support = "gpu_resources" in static_compute_info['marathon_config']['features']
        is_master = False
%>
        "gpu_support": ${True if gpu_support else False},
    % if is_master:
        'num_gpus': "${static_compute_info['master/gpus_total']}"
        'num_gpus_used': "${static_compute_info['master/gpus_used']}"
        'num_cpus': "${static_compute_info['master/cpus_total']}"
        'num_cpus_used': "${static_compute_info['master/cpus_used']}"
        'mem_total': "${static_compute_info['master/mem_total']}"
        'mem_used': "${static_compute_info['master/mem_used']}"
    % else:
        'local_volumes_host_base_path': "NA",
        'persistent_storage_drivers': "NA",
    % endif
% endif
        "sitename": "${static_compute_info['site_name']}",
        "service_type": "${goc_service_type}",
        "endpoint": "${static_compute_info['compute_service_name']}"
    },
% for _vo, _share in shares.items():
    "${_vo}": {
        "flavors": [
% for _flavor_id, _flavor in _share['templates'].items():
            {
                "type": "flavor",
                "data": {
                    "flavor_id": "${_flavor_id}",
                    "flavor_name": "NA",
                    "num_vcpus": "${_flavor['template_cpu']}",
                    "ram": "${_flavor['template_memory']}",
                    "disk": "${_flavor['template_disk']}",
                    "num_gpus": "${_flavor['template_gpu_number']}",
                    "gpu_vendor": "${_flavor['template_gpu_vendor']}",
                    "gpu_model": "${_flavor['template_gpu_model']}",
                    "gpu_driver_version": "${_flavor['template_gpu_driver']}",
                    "service": "NA"
                }
            }${'' if loop.last else ','}
% endfor
        ],
        "images": [
% for _image_id, _image in _share['images'].items():
            {
                "type": "image",
                "data": {
                    "image_id": "${_image['id']}",
                    "image_name": "${_image['image_name']}",
                    "image_description": "${_image['image_description']}",
                    "image_marketplace_id": "${_image['image_marketplace_id']}",
                    "architecture": "${_image['architecture']}",
                    "type": "${_image['os_distro']}",
                    "distribution": "${_image['os_distro']}",
                    "version": "${_image['image_os_version']}",
                    "image_os": "${_image['image_os_name']}",
                    "gpu_driver": "NA",
                    "gpu_driver_version": "NA",
                    "cuda_support": "NA",
                    "cuda_version": "NA",
                    "cuDNN_version": "NA",
                    "service": "NA"
                }
            }${'' if loop.last else ','}
% endfor
        ]
    }
% endfor
}
