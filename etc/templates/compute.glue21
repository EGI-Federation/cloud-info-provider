<%
    static_compute_info = attributes['static_compute_info']
    endpoints = attributes['endpoints']
    templates = attributes['templates']
    images = attributes['images']
    compute_service_id = static_compute_info['compute_service_name'] + '_cloud.compute'
    compute_service_manager = compute_service_id + '_manager'
%>\

## Cloud Computing Service - GLUE2CloudComputingService
dn: GLUE2ServiceID=${compute_service_id},GLUE2GroupID=resource,${static_compute_info['suffix']}
objectClass: GLUE2Entity
objectClass: GLUE2Service
objectClass: GLUE2CloudComputingService
GLUE2ServiceID: ${compute_service_id}
GLUE2ServiceServiceForeignKey: ${compute_service_id}
GLUE2ServiceAdminDomainForeignKey: ${static_compute_info['site_name']}
GLUE2ServiceType: IaaS
GLUE2ServiceQualityLevel: ${static_compute_info['compute_service_production_level']}
## XXX multiple entries could be present
GLUE2ServiceCapability: ${static_compute_info['compute_capabilities']}
## TODO find information for this attributes
## GLUE2EntityCreationTime:
## GLUE2EntityName:
## GLUE2EntityValidity:
## XXX multiple entries could be present
## GLUE2EntityOtherInfo: <additional info 1>
## GLUE2ServiceComplexity:
## GLUE2ServiceStatusInfo:
## GLUE2CloudComputingServiceSuspendedVM:
## GLUE2CloudComputingServicePendingVM:
## GLUE2CloudComputingServiceHaltedVM:
## GLUE2CloudComputingServiceTotalVM:
## GLUE2CloudComputingServiceRunningVM:
## GLUE2CloudComputingServiceAUP:


## Computing Manager - GLUE2CloudComputingManager
dn: GLUE2ManagerID=${compute_service_manager},GLUE2ServiceID=${compute_service_id},GLUE2GroupID=resource,${static_compute_info['suffix']}
objectClass: GLUE2Entity
objectClass: GLUE2Manager
objectClass: GLUE2CloudComputingManager
GLUE2ManagerID: ${compute_service_manager}
GLUE2ManagerProductName: ${static_compute_info['compute_hypervisor']}
GLUE2ManagerProductVersion: ${static_compute_info['compute_hypervisor_version']}
GLUE2EntityName: Cloud Manager for ${static_compute_info['compute_service_name']}
GLUE2ManagerServiceForeignKey: ${compute_service_id}
GLUE2CloudComputingManagerCloudComputingServiceForeignKey: ${compute_service_id}
GLUE2CloudComputingManagerTotalCPUs: ${static_compute_info['compute_total_cores']}
GLUE2CloudComputingManagerTotalRAM: ${static_compute_info['compute_total_ram']}
## TODO find information for this attributes
##GLUE2EntityCreationTime:
##GLUE2EntityValidity:
## XXX multiple entries could be present
##GLUE2EntityOtherInfo: <additional info n>
##GLUE2CloudComputingManagerTotalAccelerators:
##GLUE2CloudComputingManagerInstanceMaxCPU:
##GLUE2CloudComputingManagerInstanceMinCPU:
##GLUE2CloudComputingManagerInstanceMaxAccelerators:
##GLUE2CloudComputingManagerInstanceMinAccelerators:
##GLUE2CloudComputingManagerInstanceMaxRAM:
##GLUE2CloudComputingManagerInstanceMinRAM:
##GLUE2CloudComputingManagerInstanceMaxDedicatedRAM:
##GLUE2CloudComputingManagerInstanceMinDedicatedRAM:
##GLUE2CloudComputingManagerNetworkVirtualizationType:
##GLUE2CloudComputingManagerCPUVirtualizationType:
##GLUE2CloudComputingManagerAcceleratorVirtualizationType:
##GLUE2CloudComputingManagerVirtualdiskFormat:
##GLUE2CloudComputingManagerFailover:
##GLUE2CloudComputingManagerLiveMigration:
##GLUE2CloudComputingManagerVMBackupRestore:


## List of Cloud Computing Endpoints - GLUE2CloudComputingEndpoint
## one entry for each endpoint provided
% for url, endpoint in endpoints['endpoints'].items():
dn: GLUE2EndpointID=${endpoint['endpoint_url']}_${endpoint['compute_api_type']}_${endpoint['compute_api_version']}_${endpoint['compute_api_authn_method']},GLUE2ServiceID=${compute_service_id},GLUE2GroupID=resource,${endpoint['suffix']}
objectClass: GLUE2Entity
objectClass: GLUE2Endpoint
objectClass: GLUE2CloudComputingEndpoint
GLUE2EndpointServiceForeignKey: ${compute_service_id}
GLUE2EndpointID: ${endpoint['endpoint_url']}_${endpoint['compute_api_type']}_${endpoint['compute_api_version']}_${endpoint['compute_api_authn_method']}
GLUE2EndpointURL: ${endpoint['endpoint_url']}
GLUE2EndpointCapability: ${endpoint['compute_capabilities']}
GLUE2EndpointQualityLevel: ${endpoint['compute_production_level']}
GLUE2EndpointInterfaceName: ${endpoint['compute_api_type']}
GLUE2EndpointHealthState: ok
GLUE2EndpointServingState: ${endpoint['compute_production_level']}
GLUE2EndpointTechnology: ${endpoint['compute_api_endpoint_technology']}
GLUE2EndpointInterfaceVersion: ${endpoint['compute_api_version']}
GLUE2EndpointImplementor: ${endpoint['compute_middleware_developer']}
GLUE2EndpointImplementationName: ${endpoint['compute_middleware']}
GLUE2EndpointImplementationVersion: ${endpoint['compute_middleware_version']}
GLUE2EndpointDowntimeInfo: See the GOC DB for downtimes: https://goc.egi.eu/
## XXX multiple entries could be present
GLUE2EntityOtherInfo: Authn=${endpoint['compute_api_authn_method']}
## TODO find information for this attributes
##GLUE2EntityCreationTime:
##GLUE2EntityName:
##GLUE2EntityValidity:
##GLUE2EndpointSemantics:
##GLUE2EndpointSupportedProfile:
##GLUE2EndpointInterfaceExtension:
##GLUE2EndpointWSDL:
##GLUE2EndpointHealthStateInfo:
##GLUE2EndpointStartTime:
##GLUE2EndpointIssuerCA:
##GLUE2EndpointTrustedCA:
##GLUE2EndpointTrustedCA:
##GLUE2EndpointDowntimeAnnounce:
##GLUE2EndpointDowntimeStart:
##GLUE2EndpointDowntimeEnd:
##GLUE2CloudComputingEndpointContextualizationName:
##GLUE2CloudComputingEndpointContextualizationVersion:
% endfor

## List of templates - GLUE2CloudComputingInstanceType
% for template_id, template in templates.items():
## XXX no more present?
##GLUE2ExecutionEnvironmentVirtualMachine: TRUE
##GLUE2ExecutionEnvironmentOSFamily: linux
##GLUE2ExecutionEnvironmentCPUModel: virtual model
##GLUE2ExecutionEnvironmentCPUMultiplicity: multicpu-multicore
##GLUE2ExecutionEnvironmentCPUVendor: virtual vendor
## FIXME Need to find share ID
dn: GLUE2ResourceID=${template['template_id']}_${template['compute_service_name']},GLUE2ShareID=<share ID>,GLUE2ServiceID=${compute_service_id},GLUE2GroupID=resource,${template['suffix']}
objectClass: GLUE2Entity
objectClass: GLUE2Resource
objectClass: GLUE2CloudComputingInstanceType
GLUE2ResourceID: ${template['template_id']}_${template['compute_service_name']}
GLUE2EntityName: ${template['template_id']}
GLUE2ResourceManagerForeignKey: ${compute_service_manager}
GLUE2CloudComputingInstanceTypeCloudComputingManagerForeignKey: ${compute_service_managerl}
GLUE2CloudComputingInstanceTypePlatform: ${template['template_platform']}
GLUE2CloudComputingInstanceTypevCPU: ${template['template_cpu']}
GLUE2CloudComputingInstanceTypeRAM: ${template['template_memory']}
GLUE2CloudComputingInstanceTypeNetworkIn: TRUE
GLUE2CloudComputingInstanceTypeNetworkOut: TRUE
## TODO find information for this attributes
##GLUE2CloudComputingInstanceTypeIDForEndpoint:
##GLUE2CloudComputingInstanceTypeMarketPlaceID:
##GLUE2CloudComputingInstanceTypeEphemeralStorage:
##GLUE2CloudComputingInstanceTypeDisk:
##GLUE2CloudComputingInstanceTypeNetworkPortsIn:
##GLUE2CloudComputingInstanceTypeNetworkPortsOut:
##GLUE2CloudComputingInstanceTypeNetworkInfo:
##GLUE2CloudComputingInstanceTypeOtherHardware:
##GLUE2EntityCreationTime:
##GLUE2EntityValidity:
## XXX multiple entries could be present
##GLUE2EntityOtherInfo: <additional info 1>

% endfor

## List of images
% for image_id, image in images.items():
<%
    if image['image_description'] is None:
        image['image_description'] = ('%(image_name)s version '
            '%(image_version)s on '
            '%(image_os_family)s %(image_os_name)s '
            '%(image_os_version)s '
            '%(image_platform)s' % image)
%>\
## XXX no more existing?
## Or need to use OSName and OSVersion
##GLUE2ApplicationEnvironmentAppName: ${image['image_name']}
##GLUE2ApplicationEnvironmentAppVersion: ${image['image_version']}
## XXX no more existing?
## or need to use OtherInfo attribute
##GLUE2ApplicationEnvironmentDescription: ${image['image_description']}
## FIXME Need to find share ID
dn: GLUE2CloudComputingImageID=${image['image_id']}_${endpoint['compute_service_name']},GLUE2ShareID=<share ID>,GLUE2ServiceID=${compute_service_id},GLUE2GroupID=resource,${endpoint['suffix']}
objectClass: GLUE2Entity
objectClass: GLUE2CloudComputingImage
GLUE2EntityName: ${image['image_id']}
GLUE2CloudComputingImageID: ${image['image_id']}
GLUE2CloudComputingImageMarketPlaceID: ${image['image_marketplace_id']}
GLUE2CloudComputingImageCloudComputingManagerForeignKey: ${compute_service_manager}
## TODO find information for this attributes
##GLUE2CloudComputingImageIDForEndpoint:
##GLUE2CloudComputingImageOSPlatform:
##GLUE2CloudComputingImageOSFamily:
##GLUE2CloudComputingImageOSName:
##GLUE2CloudComputingImageOSVersion:
##GLUE2CloudComputingImageDiskSize:
##GLUE2CloudComputingImageRecommendedCPU:
##GLUE2CloudComputingImageRecommendedAcceleratorType:
##GLUE2CloudComputingImageRecommendedAccelerators:
##GLUE2CloudComputingImageRecommendedRAM:
##GLUE2CloudComputingImageMinCPU:
##GLUE2CloudComputingImageMinAccelerators:
##GLUE2CloudComputingImageMinRAM:
##GLUE2CloudComputingImageAccessInfo:
##GLUE2CloudComputingImageInstalledsoftware:
##GLUE2EntityCreationTime:
##GLUE2EntityValidity:
##GLUE2EntityOtherInfo:
## XXX we might want to skip this infomration
##GLUE2CloudComputingImageDefaultUserName:
##GLUE2CloudComputingImageDefaultPassword:

% endfor

## vim:set ft=ldif:
